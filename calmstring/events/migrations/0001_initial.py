# Generated by Django 3.2 on 2022-08-29 11:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import recurrence.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rooms', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('availability', models.CharField(choices=[('BUSY', 'Busy'), ('FREE', 'Free'), ('UNAVAILABLE', 'Unavailable'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=11, verbose_name='Availability')),
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='events_room', to='rooms.room', verbose_name='Room')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('date', models.DateTimeField()),
                ('name', models.CharField(max_length=70, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('availability', models.CharField(choices=[('BUSY', 'Busy'), ('FREE', 'Free'), ('UNAVAILABLE', 'Unavailable')], max_length=11)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('reported_users', models.ManyToManyField(blank=True, default=None, related_name='report_reported_users', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.eventroom')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, default='', max_length=70, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(null=True)),
                ('is_all_day', models.BooleanField(default=False)),
                ('duration', models.IntegerField(default=0)),
                ('is_recurring', models.BooleanField(default=False, editable=False)),
                ('recurrences', recurrence.fields.RecurrenceField(null=True)),
                ('next_occurrence', models.DateField(default=None, null=True)),
                ('occurrences', models.JSONField(default=dict)),
                ('availability', models.CharField(choices=[('BUSY', 'Busy'), ('UNAVAILABLE', 'Unavailable'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=11, verbose_name='Availability')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.eventroom')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
